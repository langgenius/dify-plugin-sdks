identity:
  name: issue_opened
  author: langgenius
  label:
    en_US: Issue Opened
    zh_Hans: Issue 打开
    pt_BR: Issue Aberta

description:
  human:
    en_US: Triggers when a new issue is opened
    zh_Hans: 当新 issue 打开时触发
    pt_BR: Dispara quando uma nova issue é aberta
  llm:
    en_US: This trigger activates when a new issue is opened on a GitHub repository, providing information about the issue, repository, and user who opened it.
    zh_Hans: 当在 GitHub 仓库中打开新 issue 时，此触发器会被激活，提供有关 issue、仓库和打开它的用户的信息。
    pt_BR: Este gatilho é ativado quando uma nova issue é aberta em um repositório do GitHub, fornecendo informações sobre a issue, repositório e usuário que a abriu.

parameters:
  - name: labels
    label:
      en_US: Label Filter
      zh_Hans: 标签过滤
      pt_BR: Filtro de Etiquetas
    type: string
    required: false
    placeholder:
      en_US: "e.g., bug, urgent, customer-reported (comma-separated)"
      zh_Hans: "例如：bug, urgent, 客户反馈（逗号分隔）"
      pt_BR: "ex: bug, urgent, relatado-cliente (separados por vírgula)"
    help:
      en_US: "Only trigger for issues with these labels"
      zh_Hans: "仅对带有这些标签的 Issue 触发"
      pt_BR: "Disparar apenas para issues com estas etiquetas"

  - name: exclude_authors
    label:
      en_US: Exclude Authors
      zh_Hans: 排除作者
      pt_BR: Excluir Autores
    type: string
    required: false
    placeholder:
      en_US: "e.g., bot-user, test-account (comma-separated)"
      zh_Hans: "例如：bot-user, test-account（逗号分隔）"
      pt_BR: "ex: bot-user, test-account (separados por vírgula)"
    help:
      en_US: "Ignore issues from these authors"
      zh_Hans: "忽略这些作者创建的 Issue"
      pt_BR: "Ignorar issues destes autores"

  - name: title_keywords
    label:
      en_US: Title Keywords
      zh_Hans: 标题关键词
      pt_BR: Palavras-chave do Título
    type: string
    required: false
    placeholder:
      en_US: "e.g., production, critical, outage (comma-separated)"
      zh_Hans: "例如：生产环境, 紧急, 故障（逗号分隔）"
      pt_BR: "ex: produção, crítico, interrupção (separados por vírgula)"
    help:
      en_US: "Only trigger if title contains any of these keywords (case-insensitive)"
      zh_Hans: "仅当标题包含这些关键词之一时触发（不区分大小写）"
      pt_BR: "Disparar apenas se o título contiver alguma destas palavras-chave"

  - name: body_keywords
    label:
      en_US: Body Keywords
      zh_Hans: 内容关键词
      pt_BR: Palavras-chave do Corpo
    type: string
    required: false
    placeholder:
      en_US: "e.g., error, exception, crash (comma-separated)"
      zh_Hans: "例如：错误, 异常, 崩溃（逗号分隔）"
      pt_BR: "ex: erro, exceção, crash (separados por vírgula)"
    help:
      en_US: "Only trigger if body contains any of these keywords (case-insensitive)"
      zh_Hans: "仅当内容包含这些关键词之一时触发（不区分大小写）"
      pt_BR: "Disparar apenas se o corpo contiver alguma destas palavras-chave"

output_schema:
  type: object
  properties:
    issue:
      type: object
      properties:
        number:
          type: number
          description: The issue number
        title:
          type: string
          description: The issue title
        body:
          type: string
          description: The issue description
        state:
          type: string
          description: The issue state (always "open" for opened events)
        html_url:
          type: string
          description: The URL to view the issue on GitHub
        created_at:
          type: string
          description: When the issue was created
        labels:
          type: array
          description: Labels attached to the issue
          items:
            type: object
            properties:
              name:
                type: string
                description: Label name
              color:
                type: string
                description: Label color
              description:
                type: string
                description: Label description
        assignees:
          type: array
          description: Users assigned to the issue
          items:
            type: object
            properties:
              login:
                type: string
                description: Assignee username
              avatar_url:
                type: string
                description: Assignee avatar URL
              html_url:
                type: string
                description: Assignee profile URL
        author:
          type: object
          properties:
            login:
              type: string
              description: The username of the issue author
            avatar_url:
              type: string
              description: The avatar URL of the issue author
            html_url:
              type: string
              description: The profile URL of the issue author
    repository:
      type: object
      properties:
        name:
          type: string
          description: The repository name
        full_name:
          type: string
          description: The full repository name (owner/repo)
        html_url:
          type: string
          description: The repository URL
        description:
          type: string
          description: The repository description
        private:
          type: boolean
          description: Whether the repository is private
        owner:
          type: object
          properties:
            login:
              type: string
              description: Repository owner username
            avatar_url:
              type: string
              description: Repository owner avatar URL
            html_url:
              type: string
              description: Repository owner profile URL
    sender:
      type: object
      properties:
        login:
          type: string
          description: The username who opened the issue
        avatar_url:
          type: string
          description: The avatar URL of the sender
        html_url:
          type: string
          description: The profile URL of the sender
        type:
          type: string
          description: The type of the sender (User, Bot, etc.)

extra:
  python:
    source: triggers/issue_opened.py