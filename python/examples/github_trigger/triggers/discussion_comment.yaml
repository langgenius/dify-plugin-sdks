identity:
  name: discussion_comment
  author: langgenius
  label:
    en_US: Discussion Comment
    zh_Hans: 讨论评论
    pt_BR: Comentário de Discussão

description:
  human:
    en_US: Triggers on discussion comment events (created, edited, deleted)
    zh_Hans: 在讨论评论事件时触发（创建、编辑、删除）
    pt_BR: Dispara em eventos de comentário de discussão (criado, editado, deletado)
  llm:
    en_US: This trigger activates on GitHub discussion comment events, providing comprehensive information about the comment, discussion, repository, and involved users.
    zh_Hans: 此触发器在 GitHub 讨论评论事件时激活，提供有关评论、讨论、仓库和相关用户的综合信息。
    pt_BR: Este gatilho é ativado em eventos de comentário de discussão do GitHub, fornecendo informações abrangentes sobre o comentário, discussão, repositório e usuários envolvidos.

parameters:
  - name: action_filter
    label:
      en_US: Action Filter
      zh_Hans: 操作过滤
      pt_BR: Filtro de Ação
    type: select
    required: false
    options:
      - value: created
        label:
          en_US: Created
          zh_Hans: 创建
          pt_BR: Criado
      - value: edited
        label:
          en_US: Edited
          zh_Hans: 编辑
          pt_BR: Editado
      - value: deleted
        label:
          en_US: Deleted
          zh_Hans: 删除
          pt_BR: Deletado
    multiple: true
    help:
      en_US: "Select which comment actions to trigger on (leave empty for all)"
      zh_Hans: "选择触发的评论操作（留空表示所有）"
      pt_BR: "Selecione quais ações de comentário devem disparar (deixe vazio para todas)"

  - name: discussion_categories
    label:
      en_US: Discussion Categories Filter
      zh_Hans: 讨论分类过滤
      pt_BR: Filtro de Categorias de Discussão
    type: string
    required: false
    placeholder:
      en_US: "e.g., General, Q&A, Ideas (comma-separated)"
      zh_Hans: "例如：General, Q&A, Ideas（逗号分隔）"
      pt_BR: "ex: General, Q&A, Ideas (separados por vírgula)"
    help:
      en_US: "Only trigger for comments on discussions in these categories"
      zh_Hans: "仅对这些分类中的讨论评论触发"
      pt_BR: "Disparar apenas para comentários em discussões nestas categorias"

  - name: exclude_authors
    label:
      en_US: Exclude Authors
      zh_Hans: 排除作者
      pt_BR: Excluir Autores
    type: string
    required: false
    placeholder:
      en_US: "e.g., dependabot[bot], renovate[bot] (comma-separated)"
      zh_Hans: "例如：dependabot[bot], renovate[bot]（逗号分隔）"
      pt_BR: "ex: dependabot[bot], renovate[bot] (separados por vírgula)"
    help:
      en_US: "Don't trigger for comments from these authors"
      zh_Hans: "不对这些作者的评论触发"
      pt_BR: "Não disparar para comentários destes autores"

  - name: min_comment_length
    label:
      en_US: Minimum Comment Length
      zh_Hans: 最小评论长度
      pt_BR: Comprimento Mínimo do Comentário
    type: number
    required: false
    placeholder:
      en_US: "e.g., 10 (minimum characters)"
      zh_Hans: "例如：10（最少字符数）"
      pt_BR: "ex: 10 (mínimo de caracteres)"
    help:
      en_US: "Only trigger if comment has at least this many characters"
      zh_Hans: "仅当评论至少有这么多字符时触发"
      pt_BR: "Disparar apenas se o comentário tiver pelo menos este número de caracteres"

  - name: exclude_discussion_authors
    label:
      en_US: Exclude Discussion Authors
      zh_Hans: 排除讨论作者
      pt_BR: Excluir Autores de Discussão
    type: string
    required: false
    placeholder:
      en_US: "e.g., dependabot[bot], renovate[bot] (comma-separated)"
      zh_Hans: "例如：dependabot[bot], renovate[bot]（逗号分隔）"
      pt_BR: "ex: dependabot[bot], renovate[bot] (separados por vírgula)"
    help:
      en_US: "Don't trigger for comments on discussions from these authors"
      zh_Hans: "不对这些作者的讨论中的评论触发"
      pt_BR: "Não disparar para comentários em discussões destes autores"

output_schema:
  type: object
  properties:
    action:
      type: string
      description: The action that was performed on the comment
    comment:
      type: object
      properties:
        id:
          type: number
          description: The comment ID
        html_url:
          type: string
          description: The URL to view the comment on GitHub
        body:
          type: string
          description: The comment content/body
        user:
          type: object
          properties:
            login:
              type: string
              description: The comment author's username
            avatar_url:
              type: string
              description: The comment author's avatar URL
            html_url:
              type: string
              description: The comment author's profile URL
        created_at:
          type: string
          description: When the comment was created
        updated_at:
          type: string
          description: When the comment was last updated
        author_association:
          type: string
          description: The author's association with the repository
        parent_id:
          type: number
          description: ID of the parent comment (for replies)
        child_comment_count:
          type: number
          description: Number of child comments
    discussion:
      type: object
      properties:
        id:
          type: number
          description: The discussion ID
        number:
          type: number
          description: The discussion number
        title:
          type: string
          description: The discussion title
        body:
          type: string
          description: The discussion body/content
        state:
          type: string
          description: The state of the discussion (open, locked, etc.)
        html_url:
          type: string
          description: The URL to view the discussion on GitHub
        category:
          type: object
          properties:
            id:
              type: number
              description: Category ID
            name:
              type: string
              description: Category name
            emoji:
              type: string
              description: Category emoji
            description:
              type: string
              description: Category description
            slug:
              type: string
              description: Category slug
        user:
          type: object
          properties:
            login:
              type: string
              description: The discussion author's username
            avatar_url:
              type: string
              description: The discussion author's avatar URL
            html_url:
              type: string
              description: The discussion author's profile URL
        labels:
          type: array
          description: Labels attached to the discussion
          items:
            type: object
            properties:
              name:
                type: string
                description: Label name
              color:
                type: string
                description: Label color
              description:
                type: string
                description: Label description
        locked:
          type: boolean
          description: Whether the discussion is locked
        created_at:
          type: string
          description: When the discussion was created
        updated_at:
          type: string
          description: When the discussion was last updated
        comments:
          type: number
          description: Number of comments on the discussion
    repository:
      type: object
      properties:
        name:
          type: string
          description: The repository name
        full_name:
          type: string
          description: The full repository name (owner/repo)
        html_url:
          type: string
          description: The repository URL
        description:
          type: string
          description: The repository description
        private:
          type: boolean
          description: Whether the repository is private
        owner:
          type: object
          properties:
            login:
              type: string
              description: Repository owner username
            avatar_url:
              type: string
              description: Repository owner avatar URL
            html_url:
              type: string
              description: Repository owner profile URL
        default_branch:
          type: string
          description: The default branch of the repository
    sender:
      type: object
      properties:
        login:
          type: string
          description: The username who triggered the event
        avatar_url:
          type: string
          description: The avatar URL of the sender
        html_url:
          type: string
          description: The profile URL of the sender
        type:
          type: string
          description: The type of the sender (User, Bot, etc.)
    changes:
      type: object
      description: Changes made (only for edited action)
      properties:
        body:
          type: object
          properties:
            from:
              type: string
              description: Previous comment body

extra:
  python:
    source: triggers/discussion_comment.py