identity:
  name: issue_comment
  author: langgenius
  label:
    en_US: Issue Comment
    zh_Hans: Issue 评论
    pt_BR: Comentário de Issue

description:
  human:
    en_US: Triggers when a comment is created, edited, or deleted on an issue or pull request
    zh_Hans: 当在 issue 或 pull request 上创建、编辑或删除评论时触发
    pt_BR: Dispara quando um comentário é criado, editado ou excluído em uma issue ou pull request
  llm:
    en_US: This trigger activates when a comment action occurs on a GitHub issue or pull request, providing information about the comment, issue, and user.
    zh_Hans: 当在 GitHub issue 或 pull request 上发生评论操作时，此触发器会被激活，提供有关评论、issue 和用户的信息。
    pt_BR: Este gatilho é ativado quando uma ação de comentário ocorre em uma issue ou pull request do GitHub, fornecendo informações sobre o comentário, issue e usuário.

parameters:
  - name: action_filter
    label:
      en_US: Action Filter
      zh_Hans: 操作过滤
      pt_BR: Filtro de Ação
    type: select
    required: false
    options:
      - value: created
        label:
          en_US: Created Only
          zh_Hans: 仅创建
          pt_BR: Apenas Criado
      - value: edited
        label:
          en_US: Edited Only
          zh_Hans: 仅编辑
          pt_BR: Apenas Editado
      - value: deleted
        label:
          en_US: Deleted Only
          zh_Hans: 仅删除
          pt_BR: Apenas Excluído
    multiple: true
    default: all
    help:
      en_US: "Filter by comment action type"
      zh_Hans: "按评论操作类型过滤"
      pt_BR: "Filtrar por tipo de ação do comentário"

  - name: command_triggers
    label:
      en_US: Command Triggers
      zh_Hans: 命令触发器
      pt_BR: Gatilhos de Comando
    type: string
    required: false
    placeholder:
      en_US: "e.g., /deploy, /test, /help (comma-separated)"
      zh_Hans: "例如：/deploy, /test, /help（逗号分隔）"
      pt_BR: "ex: /deploy, /test, /help (separados por vírgula)"
    help:
      en_US: "Only trigger if comment starts with these commands (applies to created/edited actions)"
      zh_Hans: "仅当评论以这些命令开头时触发（适用于创建/编辑操作）"
      pt_BR: "Disparar apenas se o comentário começar com estes comandos (aplica-se a ações criadas/editadas)"

  - name: exclude_bots
    label:
      en_US: Exclude Bot Comments
      zh_Hans: 排除机器人评论
      pt_BR: Excluir Comentários de Bot
    type: boolean
    required: false
    default: true
    help:
      en_US: "Ignore comments from bot accounts"
      zh_Hans: "忽略来自机器人账户的评论"
      pt_BR: "Ignorar comentários de contas bot"

  - name: issue_state
    label:
      en_US: Issue State Filter
      zh_Hans: Issue 状态过滤
      pt_BR: Filtro de Estado da Issue
    type: select
    required: false
    options:
      - value: all
        label:
          en_US: All States
          zh_Hans: 所有状态
          pt_BR: Todos os Estados
      - value: open
        label:
          en_US: Open Issues Only
          zh_Hans: 仅开放的 Issue
          pt_BR: Apenas Issues Abertas
      - value: closed
        label:
          en_US: Closed Issues Only
          zh_Hans: 仅关闭的 Issue
          pt_BR: Apenas Issues Fechadas
    default: all
    help:
      en_US: "Only trigger for issues in this state"
      zh_Hans: "仅对此状态的 Issue 触发"
      pt_BR: "Disparar apenas para issues neste estado"

  - name: author_association
    label:
      en_US: Author Association
      zh_Hans: 作者关联
      pt_BR: Associação do Autor
    type: select
    required: false
    options:
      - value: all
        label:
          en_US: All Associations
          zh_Hans: 所有关联
          pt_BR: Todas as Associações
      - value: OWNER
        label:
          en_US: Owner
          zh_Hans: 所有者
          pt_BR: Proprietário
      - value: MEMBER
        label:
          en_US: Member
          zh_Hans: 成员
          pt_BR: Membro
      - value: COLLABORATOR
        label:
          en_US: Collaborator
          zh_Hans: 协作者
          pt_BR: Colaborador
      - value: CONTRIBUTOR
        label:
          en_US: Contributor
          zh_Hans: 贡献者
          pt_BR: Contribuidor
    default: all
    help:
      en_US: "Only trigger for comments from users with this association"
      zh_Hans: "仅对具有此关联的用户的评论触发"
      pt_BR: "Disparar apenas para comentários de usuários com esta associação"

  - name: exclude_issue_authors
    label:
      en_US: Exclude Issue Authors
      zh_Hans: 排除 Issue 作者
      pt_BR: Excluir Autores de Issue
    type: string
    required: false
    placeholder:
      en_US: "e.g., spam-user, test-account (comma-separated)"
      zh_Hans: "例如：spam-user, test-account（逗号分隔）"
      pt_BR: "ex: spam-user, test-account (separados por vírgula)"
    help:
      en_US: "Ignore comments on issues created by these authors"
      zh_Hans: "忽略这些作者创建的 Issue 上的评论"
      pt_BR: "Ignorar comentários em issues criadas por esses autores"

  - name: min_comment_length
    label:
      en_US: Minimum Comment Length
      zh_Hans: 最少评论长度
      pt_BR: Comprimento Mínimo do Comentário
    type: number
    required: false
    placeholder:
      en_US: "e.g., 10 (minimum characters for meaningful comment)"
      zh_Hans: "例如：10（有意义评论的最少字符数）"
      pt_BR: "ex: 10 (caracteres mínimos para comentário significativo)"
    help:
      en_US: "Only trigger if comment has at least this many characters (applies to created/edited actions)"
      zh_Hans: "仅当评论至少有这么多字符时触发（适用于创建/编辑操作）"
      pt_BR: "Disparar apenas se o comentário tiver pelo menos este número de caracteres (aplica-se a ações criadas/editadas)"

  - name: keyword_filter
    label:
      en_US: Keyword Filter
      zh_Hans: 关键词过滤
      pt_BR: Filtro de Palavras-chave
    type: string
    required: false
    placeholder:
      en_US: "e.g., urgent, help, review (comma-separated)"
      zh_Hans: "例如：urgent, help, review（逗号分隔）"
      pt_BR: "ex: urgent, help, review (separados por vírgula)"
    help:
      en_US: "Only trigger if comment contains these keywords (applies to created/edited actions)"
      zh_Hans: "仅当评论包含这些关键词时触发（适用于创建/编辑操作）"
      pt_BR: "Disparar apenas se o comentário contiver essas palavras-chave (aplica-se a ações criadas/editadas)"

  - name: mention_required
    label:
      en_US: Required Mentions
      zh_Hans: 必需提及
      pt_BR: Menções Obrigatórias
    type: string
    required: false
    placeholder:
      en_US: "e.g., admin, team-lead, maintainer (comma-separated usernames)"
      zh_Hans: "例如：admin, team-lead, maintainer（逗号分隔的用户名）"
      pt_BR: "ex: admin, team-lead, maintainer (nomes de usuário separados por vírgula)"
    help:
      en_US: "Only trigger if comment mentions these users (@username)"
      zh_Hans: "仅当评论提及这些用户时触发（@username）"
      pt_BR: "Disparar apenas se o comentário mencionar esses usuários (@username)"

output_schema:
  type: object
  properties:
    action:
      type: string
      description: The action that was performed (created, edited, or deleted)
    comment:
      type: object
      properties:
        id:
          type: number
          description: The ID of the comment
        body:
          type: string
          description: The content of the comment (empty for deleted actions)
        body_from:
          type: string
          description: The previous content of the comment (only for edited actions)
        html_url:
          type: string
          description: The URL to view the comment on GitHub
        created_at:
          type: string
          description: When the comment was created
        updated_at:
          type: string
          description: When the comment was last updated
        author:
          type: object
          properties:
            login:
              type: string
              description: The username of the comment author
            avatar_url:
              type: string
              description: The avatar URL of the comment author
            html_url:
              type: string
              description: The profile URL of the comment author
    issue:
      type: object
      properties:
        number:
          type: number
          description: The issue number
        title:
          type: string
          description: The issue title
        state:
          type: string
          description: The issue state (open, closed)
        html_url:
          type: string
          description: The URL to view the issue on GitHub
        body:
          type: string
          description: The issue description
        labels:
          type: array
          description: Labels attached to the issue
          items:
            type: object
            properties:
              name:
                type: string
                description: Label name
              color:
                type: string
                description: Label color
              description:
                type: string
                description: Label description
        is_pull_request:
          type: boolean
          description: Whether this is a pull request
        created_at:
          type: string
          description: When the issue was created
        updated_at:
          type: string
          description: When the issue was last updated
        assignees:
          type: array
          description: Users assigned to the issue
          items:
            type: object
            properties:
              login:
                type: string
                description: Assignee username
              avatar_url:
                type: string
                description: Assignee avatar URL
              html_url:
                type: string
                description: Assignee profile URL
    repository:
      type: object
      properties:
        name:
          type: string
          description: The repository name
        full_name:
          type: string
          description: The full repository name (owner/repo)
        html_url:
          type: string
          description: The repository URL
        description:
          type: string
          description: The repository description
        private:
          type: boolean
          description: Whether the repository is private
        owner:
          type: object
          properties:
            login:
              type: string
              description: Repository owner username
            avatar_url:
              type: string
              description: Repository owner avatar URL
            html_url:
              type: string
              description: Repository owner profile URL
    sender:
      type: object
      properties:
        login:
          type: string
          description: The username who triggered the event
        avatar_url:
          type: string
          description: The avatar URL of the sender
        html_url:
          type: string
          description: The profile URL of the sender
        type:
          type: string
          description: The type of the sender (User, Bot, etc.)

extra:
  python:
    source: triggers/issue_comment.py
