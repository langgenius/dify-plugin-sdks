identity:
  name: issue_edited
  author: langgenius
  label:
    en_US: Issue Edited
    zh_Hans: Issue 编辑
    ja_JP: Issue 編集

description:
  en_US: Triggers when an issue is edited
  zh_Hans: 当 issue 被编辑时触发
  ja_JP: issue が編集されたときにトリガーがアクティブになります。
parameters:
- name: changed_fields
  label:
    en_US: Changed Fields
    zh_Hans: 更改的字段
    ja_JP: 変更されたフィールド
  type: string
  required: false
  description:
    en_US: "Only trigger if these fields were changed (e.g., title, body, comma-separated). Leave empty to trigger on any field change."
    zh_Hans: "仅当这些字段被更改时触发（例如：title, body，逗号分隔）。留空则对任何字段更改触发。"
    ja_JP: "これらのフィールドが変更された場合のみトリガー（例: title, body，カンマ区切り）。空の場合は任意のフィールド変更でトリガー。"

- name: labels
  label:
    en_US: Required Labels
    zh_Hans: 必需标签
    ja_JP: 必須ラベル
  type: string
  required: false
  description:
    en_US: "Only trigger if issue has these labels (e.g., documentation, enhancement, needs-review, comma-separated). Leave empty for no label filtering."
    zh_Hans: "仅当议题有这些标签时触发（例如：documentation, enhancement, needs-review，逗号分隔）。留空则不过滤标签。"
    ja_JP: "イシューがこれらのラベルを持つ場合のみトリガー（例: documentation, enhancement, needs-review，カンマ区切り）。空の場合はラベルフィルタなし。"

- name: editor
  label:
    en_US: Edited By
    zh_Hans: 编辑者
    ja_JP: 編集したユーザー
  type: string
  required: false
  description:
    en_US: "Only trigger if edited by these users (e.g., maintainer, contributor, comma-separated). Leave empty to allow any user."
    zh_Hans: "仅当由这些用户编辑时触发（例如：maintainer, contributor，逗号分隔）。留空则允许任何用户。"
    ja_JP: "これらのユーザーによって編集された場合のみトリガー（例: maintainer, contributor，カンマ区切り）。空の場合は全てのユーザーを許可。"

- name: title_pattern
  label:
    en_US: Title Pattern
    zh_Hans: 标题模式
    ja_JP: タイトルパターン
  type: string
  required: false
  description:
    en_US: "Only trigger if title matches this regex pattern (e.g., ^\\[DOCS\\].*, .*updated.*, supports regex). Leave empty for no title filtering."
    zh_Hans: "仅当标题匹配此正则表达式模式时触发（例如：^\\[DOCS\\].*, .*updated.*，支持正则表达式）。留空则不过滤标题。"
    ja_JP: "タイトルがこの正規表現パターンに一致する場合のみトリガー（例: ^\\[DOCS\\].*, .*updated.*，正規表現対応）。空の場合はタイトルフィルタなし。"

output_schema:
  type: object
  properties:
    issue:
      type: object
      description: The issue itself
      required:
      - id
      - node_id
      - number
      - title
      - state
      - created_at
      - updated_at
      - user
      - html_url

    changes:
      type: object
      description: The fields that were changed and their previous values

    repository:
      type: object
      description: The repository where the issue was edited
      required:
      - id
      - node_id
      - name
      - full_name
      - private
      - owner
      - html_url
      - url
      - created_at
      - updated_at
      - fork
      - default_branch
      - visibility

    sender:
      type: object
      description: The user who triggered the event
      required:
      - id
      - login
      - type

  required:
  - issue
  - repository
  - sender

extra:
  python:
    source: events/issues/issue_edited.py
