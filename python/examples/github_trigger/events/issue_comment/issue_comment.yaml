identity:
  name: issue_comment
  author: langgenius
  label:
    en_US: Issue Comment (Unified)
    zh_Hans: 议题评论（统一）
    ja_JP: イシューコメント（統合）

description:
  en_US: Unified issue_comment event with actions filter
  zh_Hans: 带 actions 过滤的统一 issue_comment 事件
  ja_JP: アクションフィルタ付きの統合 issue_comment イベント

parameters:
- name: actions
  label:
    en_US: Actions
    zh_Hans: 动作
    ja_JP: アクション
  type: select
  required: false
  multiple: true
  default:
  - created
  - edited
  - deleted
  options:
  - value: created
    label:
      en_US: Created
      zh_Hans: 创建
      ja_JP: 作成
  - value: edited
    label:
      en_US: Edited
      zh_Hans: 编辑
      ja_JP: 編集
  - value: deleted
    label:
      en_US: Deleted
      zh_Hans: 删除
      ja_JP: 削除
  help:
    en_US: Multi select filter for comment actions. Leave empty to accept all. Implemented by checking payload action.
    zh_Hans: 多选过滤评论事件动作。留空表示不过滤。通过 payload 的 action 字段判断。
    ja_JP: コメントのアクションを複数選択で絞り込み。未設定なら全て許可。ペイロード action を参照。

- name: comment_body_contains
  label:
    en_US: Comment Body Contains
    zh_Hans: 评论内容包含
    ja_JP: コメント本文に含む
  type: string
  required: false
  help:
    en_US: Match keywords in comment body. Comma separated, any match passes.
    zh_Hans: 评论内容包含关键字。逗号分隔多个，任意命中即通过。
    ja_JP: コメント本文のキーワード一致。カンマ区切りでいずれか一致。

- name: commenter
  label:
    en_US: Commenter
    zh_Hans: 评论者
    ja_JP: コメント作成者
  type: string
  required: false
  help:
    en_US: Comma separated commenter logins. Only trigger for these users.
    zh_Hans: 逗号分隔的评论者登录名。仅对这些用户触发。
    ja_JP: コメント投稿者のログイン。カンマ区切りで一致時のみ発火。

- name: issue_labels
  label:
    en_US: Issue/PR Labels
    zh_Hans: Issue/PR 标签
    ja_JP: Issue/PR ラベル
  type: string
  required: false
  help:
    en_US: Require the parent Issue or PR to contain these labels. Comma separated list.
    zh_Hans: 要求父级 Issue 或 PR 包含这些标签。逗号分隔。
    ja_JP: 親の Issue または PR に含まれるべきラベル。カンマ区切り。

- name: issue_state
  label:
    en_US: Issue/PR State
    zh_Hans: Issue/PR 状态
    ja_JP: Issue/PR の状態
  type: string
  required: false
  help:
    en_US: Filter by parent Issue or PR state such as open or closed.
    zh_Hans: 按父级 Issue 或 PR 的状态过滤，如 open 或 closed。
    ja_JP: 親の Issue/PR の状態でフィルタ。open や closed など。

- name: is_pull_request
  label:
    en_US: Is Pull Request
    zh_Hans: 是否为 Pull Request
    ja_JP: Pull Request かどうか
  type: boolean
  required: false
  help:
    en_US: If true only comments on pull requests. If false only comments on issues. Leave empty for both.
    zh_Hans: 设为 true 仅匹配 PR 评论，false 仅匹配 Issue 评论，留空两者都接收。
    ja_JP: true なら PR のコメントのみ。false なら Issue のみ。未設定で両方許可。

output_schema:
  type: object
  properties:
    action:
      type: string
    comment:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        user:
          type: object
          properties:
            login:
              type: string
            id:
              type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        html_url:
          type: string
          format: uri
      required:
      - id
      - body
      - user
      - created_at
      - html_url
    issue:
      type: object
      properties:
        id:
          type: integer
        number:
          type: integer
        title:
          type: string
        state:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            login:
              type: string
        html_url:
          type: string
          format: uri
      required:
      - id
      - number
      - title
      - state
      - user
      - html_url
    repository:
      type: object
      description: The repository where the comment occurred
      properties:
        id:
          type: integer
          format: int64
        node_id:
          type: string
        name:
          type: string
        full_name:
          type: string
        private:
          type: boolean
        owner:
          type: object
          properties:
            id:
              type: integer
            login:
              type: string
            node_id:
              type: string
            avatar_url:
              type: string
              format: uri
            html_url:
              type: string
              format: uri
            type:
              type: string
              enum:
              - Bot
              - User
              - Organization
            site_admin:
              type: boolean
          required:
          - id
          - login
        html_url:
          type: string
          format: uri
        description:
          type:
          - string
          - "null"
        fork:
          type: boolean
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        pushed_at:
          type:
          - string
          - "null"
          format: date-time
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        language:
          type:
          - string
          - "null"
        forks_count:
          type: integer
        open_issues_count:
          type: integer
        default_branch:
          type: string
        topics:
          type: array
          items:
            type: string
        visibility:
          type: string
          enum:
          - public
          - private
          - internal
      required:
      - id
      - node_id
      - name
      - full_name
      - private
      - owner
      - html_url
      - url
      - created_at
      - updated_at
      - fork
      - default_branch
      - visibility
    sender:
      type: object
      description: The user who triggered the event
      properties:
        id:
          type: integer
        login:
          type: string
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        type:
          type: string
          enum:
          - Bot
          - User
          - Organization
        site_admin:
          type: boolean
      required:
      - id
      - login
      - type

  required:
  - action
  - comment
  - issue
  - repository
  - sender

extra:
  python:
    source: events/issue_comment/issue_comment.py
